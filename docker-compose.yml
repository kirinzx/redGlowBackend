version: '3.8'

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: gamingplatform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: SeMeN4565
    ports:
      - "5432:5432"
    volumes:
      - pgdbdata:/var/lib/postgresql/data/
    networks:
      - djangonetwork
  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
    networks:
      - djangonetwork
  rabbitmq:
    image: rabbitmq:3.12-management
    hostname: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: root
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit disk_free_limit 2147483648
    networks:
      - djangonetwork
  web:
    build:
      context: ./backend
      dockerfile: Dockerfile.django
    container_name: django-container
    volumes:
      - ./backend:/app 
    environment:
      - DJANGO_ALLOWED_HOSTS=localhost
      - DJANGO_SUPERUSER_PASSWORD=admin
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=tmp@gmail.ru
    command:
      - sh
      - -c
      - start-django.sh
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - rabbitmq
    links:
      - db:db
      - redis:redis
      - rabbitmq:rabbitmq
    networks:
      - djangonetwork
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.django
    volumes:
      - ./backend:/app
    environment:
      - FLOWER_BROKER_URL=amqp://root:root@rabbitmq:5672
      - FLOWER_RESULT_BACKEND=redis://redis:6379/2
    command: 
      - sh
      - -c
      - start-celery.sh
    ports:
      - "5555:5555"
    links:
      - redis:redis
      - rabbitmq:rabbitmq
    depends_on:
      - db
      - redis
      - web
    networks:
      - djangonetwork
volumes:
  pgdbdata: null
networks:
  djangonetwork:
    driver: bridge