version: '3.8'

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: gamingplatform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: SeMeN4565
    ports:
      - "5432:5432"
    volumes:
      - pgdbdata:/var/lib/postgresql/data/
    networks:
      - djangonetwork
  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
    networks:
      - djangonetwork
  web:
    build:
      context: ./backend
      dockerfile: Dockerfile.django
    container_name: django-container
    volumes:
      - ./backend:/app 
    environment:
      - DJANGO_ALLOWED_HOSTS=127.0.0.1,localhost
      - CELERY_BROKER_URL=redis://redis:6379/2
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - DJANGO_SUPERUSER_PASSWORD=admin
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=tmp@gmail.ru
      - WATCHFILES_FORCE_POLLING=1
      - PYTHONUNBUFFERED=1
      - PASSWORD_FOR_TEST_USERS=admin1234
    command:
      - sh
      - -c
      - |
        /usr/local/bin/wait-for-it.sh db:5432 -t 15 --
        /usr/local/bin/wait-for-it.sh redis:6379 -t 5 --
        python manage.py makemigrations --noinput
        python manage.py migrate --noinput
        python manage.py createsuperuser --noinput
        python general_tools/deploy_tools/setup_db.py
        python general_tools/test_tools/setup_test_db.py
        gunicorn gamingPlatform.asgi -k gamingPlatform.uvicorn_worker.CustomUvicornWorker -c gunicorn_config.py --reload --access-logfile -
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    links:
      - db:db
      - redis:redis
    networks:
      - djangonetwork
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.django
    volumes:
      - ./backend:/app
    command: 
      - sh
      - -c
      - start-celery.sh
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/2
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    ports:
      - "5555:5555"
    depends_on:
      - db
      - redis
      - web
    networks:
      - djangonetwork
  # nginx_backend:
  #   image: nginx:latest
  #   container_name: nginx_backend
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/ssl:/etc/nginx/ssl
  #   ports:
  #     - "1212:1212"
  #   depends_on:
  #     - web
  #     - celery
volumes:
  pgdbdata: null
networks:
  djangonetwork:
    driver: bridge